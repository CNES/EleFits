@startuml
class ContiguousContainerMixin<T, TDerived> {
+ begin()
+ end()
+ operator[](index)
+ operator==(other)
+ operator!=(other)
+ empty()
}
class DataContainerHolder<T, TContainer> {
+ m_container
+ DataContainerHolder(args...)
+ data()
+ size()
}
class VectorArithmeticMixin<T, TDerived> {
+ operator+=(container)
+ operator+=(scalar)
+ operator++()
+ operator-=(container)
+ operator-=(scalar)
+ operator--()
+ operator*=(scalar)
+ operator/=(scalar)
+ apply(func, args...)
+ generate(func, args...)
}
class DataContainer<T, TContainer, TDerived> {
+ DataContainer(args...)
+ container()
+ move_to(destination)
}
class Position<N> {
+ Position(indices)
+ {static} zero()
+ {static} max()
+ dimension()
+ is_zero()
+ is_max()
+ slice()
+ extend(padding)
}
class Region<N> {
+ front
+ back
+ operator+=(position)
+ operator++()
+ operator-=(position)
+ operator--()
}
class Raster<T, N> {
- m_shape
+ Raster(shape)
+ Raster(shape, data)
+ shape()
+ domain()
+ dimension()
+ length<axis>()
+ index(position)
+ operator[](position)
+ at(position)
+ slice(region)
+ section(front, back)
}
class Column<T> {
- m_info
+ Column(info, row_count)
+ Column(info, row_count, data)
+ info()
+ rename(name)
+ reshape(repeat_count)
+ size()
+ row_count()
+ operator()(row_index, repeat_index)
+ at(row, repeat)
+ slice(front, back)
}
class ColumnInfo<T> {
+ name
+ unit
+ repeat_count
}
class Segment {
+ front
+ back
+ operator+=(index)
+ operator++()
+ operator-=(index)
+ operator--()
}

ContiguousContainerMixin <|-- DataContainer
DataContainerHolder <|-- DataContainer
VectorArithmeticMixin <|-- DataContainer
DataContainer <|-- Position
DataContainer <|-- Raster
DataContainer <|-- Column
Position --* Region
Position -* Raster
Raster --> Region
Column *- ColumnInfo
Column --> Segment
@enduml