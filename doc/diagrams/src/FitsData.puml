@startuml
package EleFitsData {

Column <|-- VecColumn
Column <|-- PtrColumn
ColumnInfo -* Column

Raster <|-- VecRaster
Raster <|-- PtrRaster
Position -* Raster

class Position<n> {
+ indices : long[]
}

abstract class Raster<T, n> {
+ shape() : Position<n>
+ size() : long
+ {abstract} data() : T*
+ operator[](Position) : T&
+ index(Position) : long
}

class VecRaster<T, n> {
- m_vec : vector<T>
+ data() : T*
+ vector() : vector<T>&
}

class PtrRaster<T, n> {
- m_data : T*
+ data() : T*
}

class Record<T> {
+ keyword : string
+ value : T
+ unit : string
+ comment : string
}

class ColumnInfo<T> {
+ name : string
+ unit : string
+ repeatCount : long
}

abstract class Column<T> {
+ info : ColumnInfo<T>
+ {abstract} data() : T*
+ elementCount() : long
+ rowCount() : long
}

class VecColumn<T> {
- m_vec : vector<T>
+ data() : T*
+ vector() : vector<T>&
}

class PtrColumn<T> {
- m_data : T*
+ data() : T*
}

}
@enduml