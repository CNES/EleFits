@startuml
class Position<n> {
}

class Raster<T, n> {
- m_shape : Position<n>
+ shape () -> Position<n>
+ {abstract}data () -> T*
+ operator[] (position) -> T&
+ at (position) -> T&
+ subraster (region) -> Subraster<T, n>
}

class PtrRaster<T, n> {
- m_data : T*
+ data () -> T*
}

class VecRaster<T, n> {
- m_vec : vector<T>
+ data () -> T*
+ vector () -> const vector<T>&
}

class Region<n> {
+ front : Position<n>
+ back : Position<n>
+ shape () -> Position<n>
}

class Subraster<T, n> {
- m_region : Region<n>
- m_raster : Raster<T, n>
+ region () -> const Region<n>&
+ raster () -> const Raster<T, n>&
+ shape () -> Position<n>
+ data () -> T*
+ operator[] (position) -> T&
+ at (position) -> T&
}

Raster <|-- PtrRaster
Raster <|-- VecRaster
Position --* Raster
Raster -o Subraster
Region --* Subraster
Position -* Region
@enduml