@startuml
package EL_FitsData {

class Record<T> {
+ keyword : string
+ value : T
+ unit : string
+ comment : comment
}

abstract class Raster<T> {
+ shape : long...
+ size() : long
+ at(long...) : T
+ data() : T*
}

abstract class Column<T> {
+ name : string
+ unit : string
+ repeatCount : long
+ elementCount() : long
+ rowCount() : long
+ at(long, long) : T
+ data() : T*
}

}

package EL_FitsFile {

class FitsFile {
+ open(string)
+ close()
}

class MefFile {
+ hduCount() : long
+ access(string) : Hdu
+ access(long) : Hdu
+ assignImageExt(string, Raster) : ImageHdu
+ assignBintableExt(string, Column...) : BintableHdu
}

class Hdu {
+ index() : long
+ name() : string
+ verifyChecksums()
+ updateChecksums()
}

class ImageHdu {
+ array() : ImageRaster
}

class BintableHdu {
+ readColumnCount() : long
+ readRowCount() : long
+ columns() : BintableColumns
}

class Header {
+ readAll() : string
+ parse(string) : Record
+ write(Record)
+ parseSeq(string...) : Record...
+ writeSeq(Record...)
}

class ImageRaster {
+ readRaster() : Raster
+ writeRaster(Raster)
}

class BintableColumns {
+ readColumn(long) : Column
+ readColumn(string) : Column
+ writeColumn(Column)
+ readColumnSeq(long...) : Column...
+ readColumnSeq(string...) : Column...
+ writeColumnSeq(Column...)
}

class BintableRows {
+ read(long) : char...
+ write(char...)
}

}

FitsFile <|-- MefFile
ImageHdu -|> Hdu
Hdu <|- BintableHdu
Hdu *-- Header
ImageHdu *-- ImageRaster
BintableHdu *-- BintableColumns
BintableHdu *-- BintableRows
MefFile *-- Hdu
Header -- Record
ImageRaster -- Raster
BintableColumns -- Column
@enduml