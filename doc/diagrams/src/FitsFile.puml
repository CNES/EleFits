@startuml
package EleFitsData {

class Record<T> {
}

class Raster<T, N, TContainer> {
}

class Column<T, TContainer> {
}

}

package EleFits {

class FitsFile {
+ open(filename)
+ close()
}

class SifFile {
+ header() : Header&
+ raster() : ImageRaster&
+ verify_checksums()
+ update_checksums()
}

class MefFile {
+ hdu_count() : long
+ access(index) : Hdu&
+ find(name, version) : Hdu&
+ append_image(name, raster) : ImageHdu&
+ append_bintable(name, columns...) : BintableHdu&
}

class Hdu {
+ index() : long
+ name() : string
+ header() : Header&
+ verify_checksums()
+ update_checksums()
}

class ImageHdu {
+ raster() : ImageRaster&
}

class BintableHdu {
+ columns() : BintableColumns&
}

class Header {
+ read_all() : string
+ parse(keyword) : Record
+ write(record)
+ parse_seq(keywords...) : Record...
+ write_seq(records...)
}

class ImageRaster {
+ read() : Raster
+ write(raster)
}

class BintableColumns {
+ read(index) : Column
+ read(name) : Column
+ write(column)
+ read_seq(indices...) : Column...
+ read_seq(names...) : Column...
+ write_seq(columns...)
}

}

FitsFile <|- SifFile
FitsFile <|-- MefFile
ImageHdu -|> Hdu
Hdu <|- BintableHdu
Hdu *-- Header
ImageHdu *-- ImageRaster
BintableHdu *-- BintableColumns
MefFile *-- Hdu
Header -- Record
ImageRaster -- Raster
BintableColumns -- Column
@enduml